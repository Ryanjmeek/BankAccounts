package assignment2;
package assignment2;

import javax.swing.JOptionPane;


public class Driver {
	
	public static void main(String[] args)
	{
		Customer ryan = new Customer(1, "Ryan", "1111 WallyWorld Ln");
		Customer jon = new Customer(2, "Jon", "1111 NotWallyWorld Ln");
		
		while(true)
		{
			
			String input = JOptionPane.showInputDialog("Input Transaction");
			if(input == null)
			{
				continue;
			}
			String splitInput[] = input.split(" ");
			int isTran;
			try
			{
				isTran = isValid(splitInput);
			}
			catch(Exception e)
			{
				isTran = 0;
			}
			if(isTran == 0)
			{
				System.out.println("Error, try again BITCH");
				
			}
			else
			{
				Customer myCustomer;
				if(splitInput[0].equals("1"))
				{
					myCustomer = ryan;
				}
				else
				{
					myCustomer = jon;
				}
				processTransaction(myCustomer, isTran, splitInput);
				String promptUser = JOptionPane.showInputDialog("Wish to Continue?");
				while(!promptUser.equals("Y") && !promptUser.equals("N"))
				{
					promptUser = JOptionPane.showInputDialog("Wish to Continue?");
				}
				if(promptUser.equals("N"))
				{
					summarize(ryan,jon);
					return;
				}
				
					
			}
			
		}
	}
	/**
	 * 
	 * @param input
	 * @return will return 0 if invalid, 1 if valid, -1 if
	 */
	public static int isValid(String[] input)
	{
		if(input.length < 3 || input.length > 5)
		{
			return 0;
		}
		
		if(input[1].equals("I"))
		{
			if(input.length == 3 && (input[2].equals("S") || input[2].equals("L") || input[2].equals("A")))
			{
				return 1; //if we are computing interest return a 1
			}
		}
		
		else if(input.length == 3 && input[1].equals("G") && 
				(input[2].equals("S") || input[2].equals("L") || 
				input[2].equals("A") || input[2].equals("C")))
		{
			return -2; //if we are getting a value return a -2
		}
		Double amount;
		try
		{
			amount = Double.valueOf(input[2]);
		}
		catch(Exception e)
		{
			amount = 0.0;
			return 0;
		}
		
		if(input[0].charAt(0) != '1' && input[0].charAt(0) != '2')
		{
			return 0; //if input is invalid return a 0
		}
		else if(input[1].charAt(0) != 'D' && input[1].charAt(0) != 'W' && input[1].charAt(0) != 
				'I' && input[1].charAt(0) != 'T' && input[1].charAt(0) != 'G')
		{
			return 0;
		}
		
		else if(input[1].equals("T"))
		{
			if(amount > 0 && input.length == 5)
			{
				if(input[3].equals("S") || input[3].equals("L") 
						|| input[3].equals("A") || input[3].equals("C"))
				{
					if(input[4].equals("S") || input[4].equals("L") 
							|| input[4].equals("A") || input[4].equals("C"))
					{
						return -1; //if we are doing a transaction return a -1
					}
				}
			}
		}
		else if(input[1].equals("W") || input[1].equals("D"))
		{
			if(amount > 0 && input.length == 4 && 
					(input[3].equals("S") || input[3].equals("L") 
					|| input[3].equals("A") || input[3].equals("C")))
			{
				
					return 2;//if we are doing a deposit or withdrawal return 2
				
			}
		}
		return 0;
	}
	
	public static void processTransaction(Customer myCust, int whatTran, String[] input)
	{
		if(whatTran == -2)
		{
			switch(input[2].charAt(0))
			{
				case 'S': System.out.println("Customer " + myCust.custNumber + 
						" savings balance is " + myCust.savAcct.getBalance());
				return;
				case 'L': System.out.println("Customer " + myCust.custNumber + 
						" loan account balance is " + myCust.loanAcct.getBalance());
				return;
				case 'A': System.out.println("Customer " + myCust.custNumber + 
						" auto loan account balance is " + myCust.autoLoanAcct.getBalance());
				return;
				case 'C': System.out.println("Customer " + myCust.custNumber + 
						" checkings balance is " + myCust.checkAcct.getBalance());
				return;
			}
		}
		else if(whatTran == 1)
		{
			switch(input[2].charAt(0))
			{
				case 'S': myCust.savAcct.applyInterest();
				return;
				case 'L': myCust.loanAcct.applyInterest();
				return;
				case 'A': myCust.autoLoanAcct.applyInterest();
				return;
			}
			
		}
		Double amount = Double.valueOf(input[2]);
		
		if(whatTran == 2)
		{
			if(input[1].equals("D"))
			{
				switch(input[3].charAt(0))
				{
					case 'S': myCust.savAcct.deposit(amount);
					break;
					case 'L': myCust.loanAcct.deposit(amount);
					break;
					case 'A': myCust.autoLoanAcct.deposit(amount);
					break;
					case 'C': myCust.checkAcct.deposit(amount);
					break;
				}
			}
			if(input[1].equals("W"))
				switch(input[3].charAt(0))
				{
					case 'S': myCust.savAcct.withdraw(amount);
					break;
					case 'L': myCust.loanAcct.withdraw(amount);
					break;
					case 'A': myCust.autoLoanAcct.withdraw(amount);
					break;
					case 'C': myCust.checkAcct.withdraw(amount);
					break;
				}
		}
		else if(whatTran == -1)
		{
			processTransfer(myCust,whatTran,input);
		}
		
	}
	
	public static void processTransfer(Customer myCust, int whatTran, String[] input)
	{
			Double amount = Double.valueOf(input[2]);
			BankAccount myWitAccount;
			BankAccount myDepAccount;
			switch(input[3].charAt(0))
			{
				case 'S': myWitAccount = myCust.savAcct;
				break;
				case 'L': myWitAccount = myCust.loanAcct;
				break;
				case 'A': myWitAccount = myCust.autoLoanAcct;
				break;
				case 'C': myWitAccount = myCust.checkAcct;
				break;
				default: myWitAccount = myCust.checkAcct;
			}
			switch(input[4].charAt(0))
			{
				case 'S': myDepAccount = myCust.savAcct;
				break;
				case 'L': myDepAccount = myCust.loanAcct;
				break;
				case 'A': myDepAccount = myCust.autoLoanAcct;
				break;
				case 'C': myDepAccount = myCust.checkAcct;
				break;
				default: myDepAccount = myCust.checkAcct;
			}
			myWitAccount.withdraw(amount);
			myDepAccount.deposit(amount);
	}

	public static void summarize(Customer cust1, Customer cust2)
	{	//summarize both Customer's data
		System.out.println("Customer " + cust1.custName + "'s summary:");
		System.out.println("ID #: " + cust1.custNumber);
		System.out.println("Address: " + cust1.custAddress);
		System.out.println("Checking account balance: " + cust1.checkAcct.balance);
		System.out.println("Savings account balance: " + cust1.savAcct.balance);
		System.out.println("Loan account balance: " + cust1.loanAcct.balance);
		System.out.println("Auto loan account balance: " + cust1.autoLoanAcct.balance + "\n");
		
		System.out.println("Customer " + cust2.custName + "'s summary:");
		System.out.println("ID #: " + cust2.custNumber);
		System.out.println("Address: " + cust2.custAddress);
		System.out.println("Checking account balance: " + cust2.checkAcct.balance);
		System.out.println("Savings account balance: " + cust2.savAcct.balance);
		System.out.println("Loan account balance: " + cust2.loanAcct.balance);
		System.out.println("Auto loan account balance: " + cust2.autoLoanAcct.balance);
	}
}
